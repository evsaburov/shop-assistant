// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int      @id @default(autoincrement())
  status     Status   @default(ACTIVE)
  role       Role     @default(USER)
  created_at DateTime @default(now()) @map("createdAt")
  updated_at DateTime @updatedAt
  Profile    Profile?
}

model Profile {
  id         Int       @id @default(autoincrement())
  created_at DateTime  @default(now()) @map("createdAt")
  updated_at DateTime  @updatedAt
  user       User      @relation(fields: [userId], references: [id])
  userId     Int       @unique
  telegram   Telegram?
  card       Card?
  city       City[]
  shop       Shop[]
}

model Telegram {
  id         Int      @unique
  first_name String
  username   String
  is_bot     Boolean
  created_at DateTime @default(now()) @map("createdAt")
  updated_at DateTime @updatedAt
  profile    Profile  @relation(fields: [profileId], references: [id])
  profileId  Int      @unique
}

model Card {
  id         Int      @id @default(autoincrement())
  first_name String
  last_name  String
  sur_name   String
  birthdate  DateTime
  email      String
  phone      String
  created_at DateTime @default(now()) @map("createdAt")
  updated_at DateTime @updatedAt
  profile    Profile  @relation(fields: [profileId], references: [id])
  profileId  Int      @unique
}

model City {
  id         Int      @id @default(autoincrement())
  name       String
  created_at DateTime @default(now()) @map("createdAt")
  updated_at DateTime @updatedAt
  profile    Profile  @relation(fields: [profileId], references: [id])
  profileId  Int      @unique
}

model Shop {
  id         Int      @id @default(autoincrement())
  name       String
  street     String
  home       String
  created_at DateTime @default(now()) @map("createdAt")
  updated_at DateTime @updatedAt
  profile    Profile  @relation(fields: [profileId], references: [id])
  profileId  Int      @unique
}

enum Role {
  USER
  ADMIN
}

enum Status {
  ACTIVE
  BLOCKED
}
