generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int       @id @default(autoincrement())
  status     Status    @default(ACTIVE)
  role       Role      @default(USER)
  created_at DateTime  @default(now()) @map("createdAt")
  updated_at DateTime  @updatedAt
  Telegram   Telegram?
  Card       Card?
  Shop       Shop[]
}

model Telegram {
  id         Int      @unique
  first_name String
  username   String
  is_bot     Boolean
  created_at DateTime @default(now()) @map("createdAt")
  updated_at DateTime @updatedAt
  user       User     @relation(fields: [userId], references: [id])
  userId     Int      @unique
}

model Card {
  id         Int      @id @default(autoincrement())
  name       String
  email      String
  phone      String
  created_at DateTime @default(now()) @map("createdAt")
  updated_at DateTime @updatedAt
  user       User     @relation(fields: [userId], references: [id])
  userId     Int      @unique
}

model Shop {
  id         Int      @id @default(autoincrement())
  name       String
  city       String
  street     String
  build      String
  created_at DateTime @default(now()) @map("createdAt")
  updated_at DateTime @updatedAt
  user       User?    @relation(fields: [userId], references: [id])
  userId     Int?     @unique
}

model Catalog {
  id      Int        @id @default(autoincrement())
  name    String
  link    String
  images  String
  Options Shipment[]
}

model Shipment {
  id          Int      @id @default(autoincrement())
  size        Int
  color       String
  amount      Int
  price       Decimal  @db.Decimal(9, 2)
  description String
  catalog     Catalog? @relation(fields: [catalogId], references: [id])
  catalogId   Int?
}

enum Role {
  USER
  ADMIN
  GUEST
}

enum Status {
  ACTIVE
  BLOCKED
}
